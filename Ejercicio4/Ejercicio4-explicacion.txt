La lectura de las 16 líneas luego de la línea de #caso n generará por cada uno de sus 8 caracteres (en caso de que éste no sea 0), un objeto de tipo Piece, cuyo atributo color estará determinado en base a si se trata de las primeras 8 líneas o las siguientes 8, siendo igual a 1 para el primer caso y -1 para el segundo. Este atributo se usará para dos propósitos. El primero es diferenciar las piezas de ambos bandos, y el segundo, por el cuál se optó por estos valores, es el de controlar el avance de los peones. Por ejemplo, un peón que está en la posición 2:4, estará atacando las posiciones 2+color:5 y 2+color:3. Por tanto, si es un peon blanco estará atacando las posiciones 3:5 y 3:3, y si se tratara de un peon negro estaría atacando las porsiciones 1:5 y 1:3. Se determina además la posición de la pieza, y mediante el caracter que se haya leído en la línea de entrada se instanciará un subtipo de Piece u otro (me resultó muy interesante el uso del patron factory para esto). Estos subtipos tienen un atributo propio "attackingLines" que consiste en una lista de listas de posiciones atacadas, que se construye a partir de su posición en el tablero, proyectando líneas en todas las direcciones hacia las cuales se puede mover la pieza. Por ejemplo una torre en la posición 0:0 tendrá un atributo attackingLines=[[0:1, 0:2, 0:3, 0:4, 0:5, 0:6, 0:7][1:0, 2:0, 3:0, 4:0, 5:0, 6:0, 7:0]]. Para el caso de los peones este atributo tendrá la misma forma y contendrá una o dos listas, dependiendo de si está en un borde del tablero o no, y cada lista tendrá una sola posición atacada. El caso del caballo es parecido, cada lista tendrá solo una posición atacada y la cantidad de listas dependerá de su posición en el tablero, siendo 8 el máximo y 2 el mínimo (para el caso de que el caballo se encuentre justo en una esquina).
Estos objetos se irán agregando a una lista (ArrayList<Piece>) a medida que se van generando para luego enviar esa lista a la función "jake" en la cual se los tomará de uno en uno y se irán recorriendo sus líneas de ataque hasta que en alguna de sus posiciones se encuentre con alguna pieza. Si esa pieza es el rey contrario se imprimirá el correspondiente mensaje de jake y se devolverá el control a la función principal. Si por el contrario, no es el rey oponente, se interrumpe la evaluación de esa línea de ataque puesto que ya no podría estar afectando al rey opuesto, y se pasa a la siguiente línea de ataque de la misma pieza. Luego de evaluar la última línea de ataque de la última pieza de la lista, en caso de no encontrar al rey opuesto antes que a otra pieza, se imprime el correspondiente mensaje de "No hay Jake" y se devuelve el control a la función principal.